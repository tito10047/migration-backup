name: "Tests"

on:
  pull_request:
  push:
  schedule:
    - cron: '* 8 * * *'

jobs:
  compatibility:
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: symfony
          MYSQL_DATABASE: symfony_test
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    name: "Tests"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        dependencies:
          - "lowest"
          - "highest"
        php-version:
          - "8.1"
          - "8.2"
          - "8.3"
          - "8.4"
        symfony:
          - '6.4.*'
          - '7.0.*'
          - '7.1.*'
          - '7.2.*'
        operating-system:
          - "ubuntu-latest"

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          php-version: "${{ matrix.php-version }}"
          extensions: pdo_sqlite, mysql, mysql-client
          ini-values: memory_limit=-1


      - name: Configure Symfony
        run: composer config extra.symfony.require "${{ matrix.symfony }}"

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: "Cache dependencies"
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ matrix.php }}-composer-

      - name: "Install lowest dependencies"
        if: ${{ matrix.dependencies == 'lowest' }}
        run: "composer update --prefer-lowest --no-interaction --no-progress --no-suggest"

      - name: "Install highest dependencies"
        if: ${{ matrix.dependencies == 'highest' }}
        run: "composer update --no-interaction --no-progress --no-suggest"


      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony
        run: vendor/bin/phpunit
